# -*- coding: utf-8 -*-
"""Market Basket Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oViZQ-Ekgu4q5g1_2Qy5wm4AEsxrzy_r
"""
#install package
!pip install mlxtend
import mlxtend

#import package
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from mlxtend.preprocessing import TransactionEncoder
from mlxtend.frequent_patterns import apriori
from mlxtend.frequent_patterns import association_rules

#open file 
from google.colab import files
uploaded = files.upload()

#creating dataframe
dataset = pd.read_csv('Groceries_dataset.csv')
dataset.head(51)

#looking for information in Groceries dataset
dataset.info()

#missing value detection
np.sum(dataset.isnull())

#barplot numbers of 10 highest item
sns.countplot(x = 'itemDescription', data = dataset, order = dataset['itemDescription'].value_counts().iloc[:10].index)
plt.xticks(rotation=90)
plt.title('Numbers of 10 Highest Item')
plt.show()

#creating basket analysis
df = dataset.groupby(['Member_number','itemDescription']).size().reset_index(name='count')
basket = (df.groupby(['Member_number', 'itemDescription'])['count']
          .sum().unstack().reset_index().fillna(0)
          .set_index('Member_number'))
#The encoding function
def encode_units(x):
    if x <= 0:
        return 0
    if x >= 1:
        return 1
basket_sets = basket.applymap(encode_units)
basket_sets.head()

#looking for support itemset
frequent_itemsets = apriori(basket_sets, min_support=0.01, use_colnames=True)
frequent_itemsets

#searching for highest support itemset
frequent_itemsets.loc[frequent_itemsets['support'] == frequent_itemsets['support'].max()]

#creating association rules
rules = association_rules(frequent_itemsets, metric="lift")
rules.sort_values('confidence', ascending = False, inplace = True)
rules.head(10)

#searching for highest confidence
rules.loc[rules['confidence'] == rules['confidence'].max()]